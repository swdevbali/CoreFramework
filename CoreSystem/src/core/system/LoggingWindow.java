/*
 * LoggingWindow.java
 *
 * Created on 06 April 2008, 14:29
 */
package core.system;

import java.util.Date;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author  PRAM WEE
 */
public class LoggingWindow extends javax.swing.JPanel {

    private static LoggingWindow instance = null;

    public static LoggingWindow getInstance() {

        if (instance == null) {
            instance = new LoggingWindow();
            
        }
        return instance;
    }
    private DefaultTableModel mdlSystemInfo;
    private HashMap<Object,BeanLogging> mapTabLogging = new HashMap();
    private DefaultTableModel tableModel;

    private LoggingWindow() {
        try {
            UIManager.setLookAndFeel(Startup.getInstance().getLookAndFeel());
            initComponents();
            mdlSystemInfo =  beanLoggingSystemInfo.getTableModel();
            mapTabLogging.put("System Info", beanLoggingSystemInfo);
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(LoggingWindow.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(LoggingWindow.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(LoggingWindow.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(LoggingWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void addToLog(String log) {
        addToLog(log, "System Info");
    }

    public void addToLog(String log, String type) {

        String[] row = new String[4];
        
        row[1] = "" + new Date();
        row[2] = log;
        row[3] = type;
        BeanLogging beanLog;
        if ("SYSTEM ACTIVITY".equals(type)) {
            row[0] = "" + mdlSystemInfo.getRowCount() + 1;
            mdlSystemInfo.insertRow(0, row);
        }else{
            if(!mapTabLogging.containsKey(type) )
            {
                beanLog=new BeanLogging();
                mapTabLogging.put(type,beanLog);
                tabLogging.addTab(type,beanLog);
            }else{
                beanLog = mapTabLogging.get(type);
            }
            tableModel = beanLog.getTableModel();
            row[0] = "" + tableModel.getRowCount() + 1;
            tableModel.insertRow(0, row);            
        }

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabLogging = new javax.swing.JTabbedPane();
        beanLoggingSystemInfo = new core.system.BeanLogging();

        tabLogging.addTab("System Activity", beanLoggingSystemInfo);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabLogging, javax.swing.GroupLayout.DEFAULT_SIZE, 711, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(tabLogging, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private core.system.BeanLogging beanLoggingSystemInfo;
    private javax.swing.JTabbedPane tabLogging;
    // End of variables declaration//GEN-END:variables
}
